package calculadoraTest

import spock.lang.*
import calculadora.Calculadora

class FactorialSpec extends Specification {
    
    @Shared
    Calculadora calculadora = new Calculadora()
    
    @Unroll('Con el valor #x')
    def 'Se prueba el método factorial'() {

    	expect:
            resultado == calculadora.factorial(x)

    	where:
            x       ||   resultado  
            0       ||      1
            1       ||      1
            2       ||      2
            3       ||      6
            4       ||      24
            5       ||      120
            6       ||      720
            7       ||      5040
            8       ||      40320
            9       ||      362880
            
            // Fuente: https://keisan.casio.com/calculator
            50      ||      30414093201713378043612608166064768844377641568960512000000000000
            70      ||      11978571669969891796072783721689098736458938142546425857555362864628009582789845319680000000000000000
            350     ||      123587405826548875014395199766546457224532073946919515879429330230093035357491314216934583295011178445941552109432761532449767761892237043444942213964090091669490545661255111334533069825455607852789836451585122902099649977304226794874840601811017764137584868137504975397325925882541777117706619490238363409254589994079334626893194608016888986949684994333459029365214555784862353939102567266745712846824819004146064184543888123533464975621179287075018586481357643313075153359002713294611632614208134036650116689052585573350955360246170451786972351365370405722036294385680478287278827977511411909071460914807681131728232182991517416470483157998067487290163200000000000000000000000000000000000000000000000000000000000000000000000000000000000000
            500     ||      1220136825991110068701238785423046926253574342803192842192413588385845373153881997605496447502203281863013616477148203584163378722078177200480785205159329285477907571939330603772960859086270429174547882424912726344305670173270769461062802310452644218878789465754777149863494367781037644274033827365397471386477878495438489595537537990423241061271326984327745715546309977202781014561081188373709531016356324432987029563896628911658974769572087926928871281780070265174507768410719624390394322536422605234945850129918571501248706961568141625359056693423813008856249246891564126775654481886506593847951775360894005745238940335798476363944905313062323749066445048824665075946735862074637925184200459369692981022263971952597190945217823331756934581508552332820762820023402626907898342451712006207714640979456116127629145951237229913340169552363850942885592018727433795173014586357570828355780158735432768888680120399882384702151467605445407663535984174430480128938313896881639487469658817504506926365338175055478128640000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
    }
    
    def 'Se prueba que al pasar un valor negativo, lance una excepción'() {

    	when:
            calculadora.factorial(-1)
    	then:
            thrown(ArithmeticException)
    }
    
    def 'Se prueba que al pasar un valor mayor a 500, lance una excepción'() {

    	when:
            calculadora.factorial(501)
    	then:
            thrown(ArithmeticException)
    }
}
